{"ast":null,"code":"import _asyncToGenerator from \"C:/_git/OpenAI/EwrsDocAnalyses/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../service/http.service\";\nimport * as i3 from \"../service/signalR.service\";\nimport * as i4 from \"@angular/material/progress-bar\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = [\"fileInput\"];\nconst _c1 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\nfunction HomeComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c1, ctx_r0.isExcelFile(option_r2) ? \"green\" : \"black\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r2);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"hidden-div\": a0\n  };\n};\nexport class HomeComponent {\n  constructor(http, baseUrl, httpService, signalRService) {\n    this.httpService = httpService;\n    this.signalRService = signalRService;\n    this.files = [];\n    this.docxContent = \"\";\n    this.theText = \"\";\n    this.documentList = [];\n    this.isProgreeBarShow = false;\n    this.isEpi = false;\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.metaData = {\n        title: \"\",\n        language: '',\n        type: '',\n        category: '',\n        tags: '',\n        disease: ''\n      };\n      _this.signalRService.startConnection();\n      _this.signalRService.openDataListener();\n      _this.signalRService.onMessage().subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (message) {\n          _this.serverMsg = message;\n          if (_this.serverMsg.msgName == 'newFile') {\n            _this.theText = _this.serverMsg.data;\n          }\n          if (_this.serverMsg.msgName == 'chatGptDone') {\n            _this.isProgreeBarShow = false;\n            _this.getDocumentList();\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      _this.getDocumentList();\n    })();\n  }\n  isExcelFile(option) {\n    return option.toLowerCase().endsWith('.xlsx') || option.toLowerCase().endsWith('.xls');\n  }\n  openFileExplorer() {\n    this.fileInput.nativeElement.click();\n  }\n  onFileSelected(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files[0]) {\n      const selectedFile = inputElement.files[0];\n      // Use the selected file as needed\n      console.log('Selected file: ' + selectedFile.name);\n      // You can also perform other actions, such as uploading the file to a server.\n    }\n  }\n\n  handleCheckboxChange(event) {\n    this.isEpi = event.target.checked;\n    if (this.isEpi) {\n      console.log('Checkbox is checked.');\n      const apiUrl = this.baseUrl + \"home/InitChatGpt\";\n      this.httpService.xhr({\n        url: apiUrl,\n        method: 'GET'\n      }).subscribe(response => {\n        console.log(response);\n        this.documentList = response;\n      }, error => {\n        console.error('Error:', error);\n      });\n    } else {\n      console.log('Checkbox is unchecked.');\n      // Perform some action when the checkbox is unchecked.\n    }\n  }\n\n  getDocumentList() {\n    const apiUrl = this.baseUrl + \"home/GetDocuments\";\n    this.httpService.xhr({\n      url: apiUrl,\n      method: 'GET'\n    }).subscribe(response => {\n      console.log(response);\n      this.documentList = response;\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  getDocListMetadata() {\n    this.isProgreeBarShow = true;\n    const apiUrl = this.baseUrl + \"home/GetDocumentMetadata\";\n    this.httpService.xhr({\n      url: apiUrl,\n      method: 'GET'\n    }).subscribe(response => {}, error => {\n      console.error('Error:', error);\n    });\n  }\n  getMetadata() {\n    const apiUrl = this.baseUrl + \"home/GetMetadata\";\n    this.httpService.xhr({\n      url: apiUrl,\n      method: 'POST',\n      data: this.theText\n    }).subscribe(response => {\n      this.metaData = response;\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  dropped(files) {\n    this.files = files;\n    console.log(files);\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry;\n        fileEntry.file(file => {\n          this.downloadFile(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry;\n        console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n  }\n  fileOver(event) {\n    console.log(event);\n  }\n  fileLeave(event) {\n    console.log(event);\n  }\n  downloadFile(file) {\n    const blob = new Blob([file], {\n      type: file.type\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.SignalRService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"main\"], [\"type\", \"checkbox\", \"name\", \"myCheckbox\", \"checked\", \"false\", 3, \"click\"], [1, \"col-12\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", \"mt-2\", 3, \"click\"], [\"className\", \"fas fa-edit\"], [1, \"mt-2\"], [\"mode\", \"indeterminate\", 1, \"custom-progress-bar\", 3, \"ngClass\"], [1, \"list-group\", \"mt-3\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"file-input-button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", \"mt-3\", 3, \"click\"], [\"type\", \"file\", \"accept\", \"*/*\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [3, \"ngStyle\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"Head\")(2, \"title\");\n      i0.ɵɵtext(3, \"OpenAI Chatbot\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"h1\");\n      i0.ɵɵtext(6, \"EWRS Documents Analyses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 1);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_input_click_7_listener($event) {\n        return ctx.handleCheckboxChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"Epidemiologist \");\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_10_listener() {\n        return ctx.getDocListMetadata();\n      });\n      i0.ɵɵelementStart(11, \"span\");\n      i0.ɵɵelement(12, \"i\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \" Get documents metadata\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 5);\n      i0.ɵɵelement(15, \"mat-progress-bar\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ul\", 7);\n      i0.ɵɵtemplate(17, HomeComponent_li_17_Template, 2, 4, \"li\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_18_listener() {\n        return ctx.openFileExplorer();\n      });\n      i0.ɵɵtext(19, \"Explorer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 10, 11);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_20_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"hr\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c2, !ctx.isProgreeBarShow));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.documentList);\n    }\n  },\n  dependencies: [i4.MatProgressBar, i5.NgClass, i5.NgForOf, i5.NgStyle],\n  styles: [\".main[_ngcontent-%COMP%], .main[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;\\r\\n  line-height: 1.5;\\r\\n  font-weight: 400;\\r\\n  color-scheme: light dark;\\r\\n  color: rgba(46, 139, 6, 0.87);\\r\\n  font-synthesis: none;\\r\\n  text-rendering: optimizeLegibility;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  -webkit-text-size-adjust: 100%;\\r\\n}\\r\\n.main[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\r\\n  width: 34px;\\r\\n}\\r\\n.main[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\r\\n  font-size: 32px;\\r\\n  line-height: 40px;\\r\\n  font-weight: bold;\\r\\n  color: #202123;\\r\\n  margin: 16px 0 40px;\\r\\n}\\r\\n.main[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 320px;\\r\\n  text-align: center;\\r\\n  position: sticky;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.main[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder {\\r\\n  color: #8e8ea0;\\r\\n  opacity: 1;\\r\\n}\\r\\n.main[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 40px;\\r\\n  border: none;\\r\\n  padding: 10px;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n.main[_ngcontent-%COMP%]   .result[_ngcontent-%COMP%] {\\r\\n  font-weight: bold;\\r\\n  margin-top: 40px;\\r\\n}\\r\\n.p[_ngcontent-%COMP%]{\\r\\n  background-color: darkslategray;\\r\\n  max-width: 70%;\\r\\n  padding: 15px;\\r\\n  border-radius: 50px;\\r\\n}\\r\\n.p[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{\\r\\n  margin: 5px;\\r\\n}\\r\\n.p[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child{\\r\\n  margin-right: 0;\\r\\n}\\r\\n.user_msg[_ngcontent-%COMP%]{\\r\\n  text-align: right;\\r\\n  margin-left: 30%;\\r\\n  display: flex;\\r\\n  flex-direction: row-reverse;\\r\\n  background-color: rgb(179, 230, 181);\\r\\n  max-width: 70%;\\r\\n  padding: 15px;\\r\\n  border-radius: 50px;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.gpt_msg[_ngcontent-%COMP%]{\\r\\n  background-color: rgb(204, 203, 214);\\r\\n  max-width: 70%;\\r\\n  padding: 15px;\\r\\n  border-radius: 50px;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.hide[_ngcontent-%COMP%] {\\r\\n  visibility: hidden;\\r\\n  display: none;\\r\\n}\\r\\n.form[_ngcontent-%COMP%]{\\r\\n  text-align: center;\\r\\n  position: sticky;\\r\\n  bottom: 0;\\r\\n}\\r\\n.input[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n  height: 40px;\\r\\n  border:1px;\\r\\n  padding: 10px;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n.input[_ngcontent-%COMP%]:focus{\\r\\n  outline: none;\\r\\n}\\r\\n.ngx-file[_ngcontent-%COMP%] {\\r\\nborder-left-color:rgb(87, 51, 165);\\r\\nborder: 2px;\\r\\n}\\r\\n\\r\\n.hidden-div[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOzs7Ozs7Ozs7O0VBVUUsWUFBWTtFQUNaLG1FQUFtRTtFQUNuRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4Qiw2QkFBNkI7RUFDN0Isb0JBQW9CO0VBQ3BCLGtDQUFrQztFQUNsQyxtQ0FBbUM7RUFDbkMsa0NBQWtDO0VBQ2xDLDhCQUE4QjtBQUNoQztBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFNBQVM7QUFDWDtBQUNBOzs7Ozs7Ozs7OztHQVdHO0FBQ0g7RUFDRSxjQUFjO0VBQ2QsVUFBVTtBQUNaO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLFlBQVk7RUFDWixhQUFhO0VBQ2IsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSwrQkFBK0I7RUFDL0IsY0FBYztFQUNkLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsMkJBQTJCO0VBQzNCLG9DQUFvQztFQUNwQyxjQUFjO0VBQ2QsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsY0FBYztFQUNkLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7QUFDZjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixTQUFTO0FBQ1g7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osVUFBVTtFQUNWLGFBQWE7RUFDYixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLFdBQVc7QUFDWDs7QUFFQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubWFpbixcclxuLyogLm1haW4gaW5wdXQge1xyXG4gIFxyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBsaW5lLWhlaWdodDogMjBweDtcclxuICBjb2xvcjogIzM1Mzc0MDtcclxuICBmb250LWZhbWlseTogXCJDb2xmYXhBSVwiLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgYm9yZGVyOiAjMTBhMzdmO1xyXG59ICovXHJcbi5tYWluIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgZm9udC1mYW1pbHk6IEludGVyLCBzeXN0ZW0tdWksIEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgY29sb3Itc2NoZW1lOiBsaWdodCBkYXJrO1xyXG4gIGNvbG9yOiByZ2JhKDQ2LCAxMzksIDYsIDAuODcpO1xyXG4gIGZvbnQtc3ludGhlc2lzOiBub25lO1xyXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbn1cclxuLm1haW4gLmljb24ge1xyXG4gIHdpZHRoOiAzNHB4O1xyXG59XHJcbi5tYWluIGgzIHtcclxuICBmb250LXNpemU6IDMycHg7XHJcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICMyMDIxMjM7XHJcbiAgbWFyZ2luOiAxNnB4IDAgNDBweDtcclxufVxyXG4ubWFpbiBmb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDMyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gIGJvdHRvbTogMDtcclxufVxyXG4vKiAubWFpbiBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XHJcbiAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMxMGEzN2Y7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgb3V0bGluZS1jb2xvcjogIzEwYTM3ZjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgXHJcbiAgcGFkZGluZzogMTBweDtcclxuICBmb250LXNpemU6IDEuMnJlbTtcclxufSAqL1xyXG4ubWFpbiA6OnBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogIzhlOGVhMDtcclxuICBvcGFjaXR5OiAxO1xyXG59XHJcbi5tYWluIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogNDBweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBmb250LXNpemU6IDEuMnJlbTtcclxufVxyXG4ubWFpbiAucmVzdWx0IHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG59XHJcbi5we1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtzbGF0ZWdyYXk7XHJcbiAgbWF4LXdpZHRoOiA3MCU7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG59XHJcbi5wIHNwYW57XHJcbiAgbWFyZ2luOiA1cHg7XHJcbn1cclxuLnAgc3BhbjpmaXJzdC1jaGlsZHtcclxuICBtYXJnaW4tcmlnaHQ6IDA7XHJcbn1cclxuLnVzZXJfbXNne1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIG1hcmdpbi1sZWZ0OiAzMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE3OSwgMjMwLCAxODEpO1xyXG4gIG1heC13aWR0aDogNzAlO1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5ncHRfbXNne1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDQsIDIwMywgMjE0KTtcclxuICBtYXgtd2lkdGg6IDcwJTtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uaGlkZSB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmZvcm17XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgYm90dG9tOiAwO1xyXG59XHJcbi5pbnB1dHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgYm9yZGVyOjFweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG59XHJcbi5pbnB1dDpmb2N1c3tcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcbi5uZ3gtZmlsZSB7XHJcbmJvcmRlci1sZWZ0LWNvbG9yOnJnYig4NywgNTEsIDE2NSk7XHJcbmJvcmRlcjogMnB4O1xyXG59XHJcblxyXG4uaGlkZGVuLWRpdiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HomeComponent","constructor","http","baseUrl","httpService","signalRService","ngOnInit","metaData","title","language","type","category","tags","disease","startConnection","openDataListener","onMessage","subscribe","message","serverMsg","msgName","theText","data","isProgreeBarShow","getDocumentList","isExcelFile","option","toLowerCase","endsWith","openFileExplorer","fileInput","nativeElement","click","onFileSelected","event","inputElement","target","files","selectedFile","console","log","name","handleCheckboxChange","isEpi","checked","apiUrl","xhr","url","method","response","documentList","error","getDocListMetadata","getMetadata","dropped","droppedFile","fileEntry","isFile","file","downloadFile","relativePath","fileOver","fileLeave","blob","Blob","window","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","revokeObjectURL","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\_git\\OpenAI\\EwrsDocAnalyses\\ClientApp\\src\\app\\home\\home.component.html","C:\\_git\\OpenAI\\EwrsDocAnalyses\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<div>\r\n\r\n  <Head>\r\n    <title>OpenAI Chatbot</title>\r\n  </Head>\r\n  <div class=\"main\">\r\n    <h1>EWRS Documents Analyses</h1>\r\n\r\n    <input type=\"checkbox\" name=\"myCheckbox\" checked=false (click)=\"handleCheckboxChange($event)\">Epidemiologist\r\n    \r\n    <div class=\"col-12\">\r\n      <button type=\"button\" class=\"btn btn-success btn-sm mt-2\" (click)=\"getDocListMetadata()\"><span><i\r\n            className=\"fas fa-edit\"></i></span> Get documents metadata</button>\r\n    </div>\r\n    <div class=\"mt-2\">\r\n      <mat-progress-bar mode=\"indeterminate\" class=\"custom-progress-bar\"\r\n        [ngClass]=\"{'hidden-div': !isProgreeBarShow}\"></mat-progress-bar>\r\n    </div>\r\n    <!-- List of documents in folder -->\r\n    <!-- <select size=\"10\" class=\"form-control mt-3\">\r\n      <option *ngFor=\"let option of documentList\" [value]=\"option\" [ngStyle]=\"{'color': isExcelFile(option) ? 'green' : 'black'}\">{{ option }}</option>\r\n    </select> -->\r\n\r\n    <ul class=\"list-group mt-3\">\r\n      <li *ngFor=\"let option of documentList\" [ngStyle]=\"{'color': isExcelFile(option) ? 'green' : 'black'}\">{{ option }}</li>\r\n    </ul>\r\n\r\n    <button id=\"file-input-button\"  (click)=\"openFileExplorer()\" class=\"btn btn-secondary btn-sm mt-3\">Explorer</button>\r\n    <input #fileInput type=\"file\" style=\"display: none\" (change)=\"onFileSelected($event)\" accept=\"*/*\">\r\n\r\n    \r\n\r\n    <hr>\r\n\r\n    <!-- Drop zone -->\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <ngx-file-drop dropZoneLabel=\"Drop files here\" contentClassName=\"ngx-file\" dropZoneClassName=\"my-style\"\r\n          (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\" (onFileLeave)=\"fileLeave($event)\">\r\n          <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\"\r\n              class=\"bi bi-file-earmark-arrow-up-fill\" viewBox=\"0 0 16 16\">\r\n              <path\r\n                d=\"M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0zM9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1zM6.354 9.854a.5.5 0 0 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 8.707V12.5a.5.5 0 0 1-1 0V8.707L6.354 9.854z\" />\r\n            </svg>\r\n          </ng-template>\r\n        </ngx-file-drop>\r\n        <div class=\"upload-table\">\r\n          <table class=\"table\">\r\n            <tbody class=\"upload-name-style\">\r\n              <tr *ngFor=\"let item of files; let i=index\">\r\n                <td><strong>{{ item.relativePath }}</strong></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"col-12\">\r\n      <button type=\"button\" class=\"btn btn-success btn-sm\" (click)=\"getMetadata()\"><span><i\r\n            className=\"fas fa-edit\"></i></span> Get metadata</button>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Title\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.title\" aria-label=\"Title\" disabled readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Area\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" value='Risk communication' aria-label=\"Categories\" disabled\r\n              readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Type\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.type\" aria-label=\"type\" disabled readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Language\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.language\" aria-label=\"Categories\" disabled\r\n              readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Categorie\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.category\" aria-label=\"Categories\" disabled\r\n              readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Agent\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" value=\"\" aria-label=\"Categories\" disabled readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Disease\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.disease\" aria-label=\"Categories\" disabled\r\n              readonly>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-3 text-start\">\r\n            Tags\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <input class=\"form-control\" type=\"text\" [value]=\"metaData?.tags\" aria-label=\"Tags\" disabled readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-6\">\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-2 text-start\">\r\n            Source\r\n          </div>\r\n          <div class=\"col-10\">\r\n            <textarea class=\"form-control\" type=\"text\" [(ngModel)]=\"theText\" aria-label=\"Tags\" disabled readonly\r\n              rows=\"14\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->","import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpSettings, HttpService } from '../service/http.service';\r\nimport { Observable } from 'rxjs';\r\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport { SignalRService } from '../service/signalR.service';\r\nimport { ServerMsg } from '../class/serverMsg';\r\nimport { MetaData } from '../class/metaData';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  @ViewChild('fileInput', { static: false }) fileInput!: ElementRef;\r\n\r\n  private baseUrl: string;\r\n  public files: NgxFileDropEntry[] = [];\r\n  public docxContent: string = \"\";\r\n  public serverMsg: ServerMsg | undefined;\r\n  public theText:string = \"\";\r\n  public metaData: MetaData | undefined;\r\n  public documentList: string[] = [];\r\n  public isProgreeBarShow: boolean = false;\r\n  public isEpi: boolean = false;\r\n\r\n  constructor(http: HttpClient,\r\n    @Inject('BASE_URL') baseUrl: string,\r\n    private httpService: HttpService,\r\n    private signalRService: SignalRService,) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.metaData = { title: \"\", language: '', type: '', category: '', tags:'', disease: ''};\r\n\r\n    this.signalRService.startConnection();\r\n    this.signalRService.openDataListener();\r\n\r\n    this.signalRService.onMessage().subscribe(async (message: ServerMsg) => {\r\n      this.serverMsg = message;\r\n      if (this.serverMsg.msgName == 'newFile') {\r\n        this.theText = this.serverMsg.data;\r\n      }\r\n      if (this.serverMsg.msgName == 'chatGptDone') {\r\n        this.isProgreeBarShow = false;\r\n        this.getDocumentList();\r\n      }\r\n    });\r\n\r\n   this.getDocumentList();\r\n  }\r\n\r\n  isExcelFile(option: string): boolean {\r\n    return option.toLowerCase().endsWith('.xlsx') || option.toLowerCase().endsWith('.xls');\r\n  }\r\n\r\n  openFileExplorer() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  onFileSelected(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    if (inputElement.files && inputElement.files[0]) {\r\n      const selectedFile = inputElement.files[0];\r\n      // Use the selected file as needed\r\n      console.log('Selected file: ' + selectedFile.name);\r\n      // You can also perform other actions, such as uploading the file to a server.\r\n    }\r\n  }\r\n\r\n  handleCheckboxChange(event: any) {\r\n    this.isEpi = event.target.checked;\r\n\r\n    if (this.isEpi) {\r\n      console.log('Checkbox is checked.');\r\n      const apiUrl = this.baseUrl + \"home/InitChatGpt\"; \r\n      this.httpService.xhr<any>({ url: apiUrl, method: 'GET' }).subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.documentList = response;\r\n        },\r\n        (error) => {\r\n          console.error('Error:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Checkbox is unchecked.');\r\n      // Perform some action when the checkbox is unchecked.\r\n    }\r\n  }\r\n\r\n  getDocumentList() {\r\n    const apiUrl = this.baseUrl + \"home/GetDocuments\"; \r\n    this.httpService.xhr<any>({ url: apiUrl, method: 'GET' }).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.documentList = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getDocListMetadata() {\r\n    this.isProgreeBarShow = true;\r\n    const apiUrl = this.baseUrl + \"home/GetDocumentMetadata\";\r\n    this.httpService.xhr<any>({ url: apiUrl, method: 'GET' }).subscribe(\r\n      (response) => {\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getMetadata() {\r\n    const apiUrl = this.baseUrl + \"home/GetMetadata\";\r\n\r\n    this.httpService.xhr<any>({ url: apiUrl, method: 'POST', data: this.theText }).subscribe(\r\n      (response) => {\r\n       this.metaData = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public dropped(files: NgxFileDropEntry[]) {\r\n    this.files = files;\r\n    console.log(files);\r\n    for (const droppedFile of files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          this.downloadFile(file);\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n        console.log(droppedFile.relativePath, fileEntry);\r\n      }\r\n    }\r\n  }\r\n\r\n  public fileOver(event: any) {\r\n    console.log(event);\r\n  }\r\n\r\n  public fileLeave(event: any) {\r\n    console.log(event);\r\n  }\r\n\r\n  private downloadFile(file: File) {\r\n    const blob = new Blob([file], { type: file.type });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.style.display = 'none';\r\n    a.href = url;\r\n    a.download = file.name;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}